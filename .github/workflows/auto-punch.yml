name: Auto Punch Card

on:
  schedule:
    # 工作日上午6:30触发（窗口内随机延迟后执行）
    - cron: '30 22 * * 1-5'
    # 工作日下午18:00触发（窗口内随机延迟后执行）
    - cron: '0 10 * * 1-5'
  workflow_dispatch: # 允许手动触发

jobs:
  punch:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
      PUNCH_URL: ${{ secrets.PUNCH_URL }}
      PUNCH_TOKEN: ${{ secrets.PUNCH_TOKEN }}
      APP_VERSION_NUMBER: ${{ secrets.APP_VERSION_NUMBER }}
      FEISHU_BOT_WEBHOOK: ${{ secrets.FEISHU_BOT_WEBHOOK }}
      ZHIPU_API_KEY: ${{ secrets.ZHIPU_API_KEY }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install

    - name: Random delay within window (06:30–08:00, 18:00–22:00)
      shell: bash
      run: |
        # 计算当天秒数
        H=$(date +%H)
        M=$(date +%M)
        S=$(date +%S)
        SECS=$((H*3600 + M*60 + S))

        # 设定时间窗口（上海时间）
        M_START=$((6*3600 + 30*60))   # 06:30
        M_END=$((8*3600))             # 08:00
        E_START=$((18*3600))          # 18:00
        E_END=$((22*3600))            # 22:00

        # 根据当前所在窗口计算最大延迟，确保不超窗
        if [ "$SECS" -ge "$M_START" ] && [ "$SECS" -lt "$M_END" ]; then
          MAX=$((M_END - SECS))
          WINDOW="06:30–08:00"
        elif [ "$SECS" -ge "$E_START" ] && [ "$SECS" -lt "$E_END" ]; then
          MAX=$((E_END - SECS))
          WINDOW="18:00–22:00"
        else
          MAX=0
          WINDOW="outside-defined-windows"
        fi

        if [ "$MAX" -gt 0 ]; then
          JITTER=$((RANDOM % MAX))   # 0..MAX-1 秒
          echo "In window $WINDOW, sleeping $JITTER seconds (max $MAX)."
          sleep "$JITTER"
        else
          echo "Not in a defined window, skipping delay."
        fi

    - name: Check local time
      run: |
        date
        node -e "console.log('Node local time:', new Date().toString())"

    - name: Punch Card
      run: node index.js
